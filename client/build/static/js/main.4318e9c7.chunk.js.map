{"version":3,"sources":["store/actions/flowsActions.js","components/WrappedLink/WrappedLink.js","containers/Home/Home.js","store/actions/actionTypes.js","store/actions/usersActions.js","components/ErrorMsg/ErrorMsg.js","components/InputField/InputField.js","containers/Users/Signup/Signup.js","containers/Users/Login/Login.js","store/actions/articlesActions.js","containers/Articles/FullArticle/FullArticle.js","containers/Articles/AddArticle/AddArticle.js","containers/Articles/EditArticle/EditArticle.js","containers/NavigationBar/NavigationBar.js","App.js","store/reducers/articlesReducer.js","store/reducers/usersReducer.js","store/reducers/flowsReducer.js","index.js"],"names":["options","data","headers","localStorage","getItem","method","body","JSON","stringify","wrappedLink","props","Link","to","className","buttonClasses","join","onClick","children","elements","id","type","label","position","x","y","source","target","animated","connect","state","flow","flows","myArticles","articles","isAuthenticated","users","dispatch","submitTempNewFlow","flowData","fetch","then","res","json","getTempFlow","useState","setFlow","useEffect","console","log","map","item","React","createElement","style","height","icon","faPlus","faFolderOpen","faSave","faCloudUploadAlt","errorMsg","msg","inputField","OnErrorClass","name","defaultValue","placeholder","errors","onChange","validateEmail","email","test","FIELDS","Signup","userDetails","commonValidation","field","value","error","length","confirmPassword","password","userUniqueness","a","checkUserUniqueness","result","uniquenessError","handleInputChange","e","commonValidationError","setState","prevState","setItem","handleSignup","preventDefault","Object","keys","filter","userSignupRequest","removeItem","history","push","parse","this","Redirect","inputFields","key","onSubmit","Component","userInputDetails","userSignupDetails","Login","userCredentials","handleValidation","invalidCredentials","handleLogin","userLoginRequest","userLoginDetails","success","token","authorizationToken","authenticatedUsername","jwt","decode","username","FullArticle","getSingleArticle","match","params","article","_id","getArticle","replace","pathname","alert","deleteArticle","title","author","float","padding","handleDeleteArticleClick","click","handleEditArticleClick","articleId","disabled","AddArticle","handleNewArticleSubmit","submitNewArticle","articleData","EditArticle","handleEditArticleSubmit","saveArticle","withRouter","NavigationBar","userLinks","userLogoutRequest","guestLinks","NavLink","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","Switch","Route","path","component","Home","initialState","reducer","action","validCredentials","err","myFlows","rootReducer","combineReducers","articlesReducer","usersReducer","flowsReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4318e9c7.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\r\n\r\nconst options = (data) => {\r\n    return {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('jwtToken'),\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n        },\r\n        method: 'post',\r\n        body: JSON.stringify(data)\r\n    };\r\n};\r\n\r\nexport const getAllFlows = () => {\r\n    return dispatch => {\r\n        fetch('/api/flows')\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            localStorage.setItem('BasicMERNStackAppAllFlows', JSON.stringify(res.flows));\r\n            dispatch({ type: actionTypes.GOT_ALL_FLOWS, flows: res.flows })\r\n        })\r\n    };\r\n};\r\n\r\nexport const getMyFlows = () => {\r\n    return dispatch => {\r\n        fetch('/api/flows/myflows', {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwtToken'),\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'GET'\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            localStorage.setItem('BasicMERNStackAppMyFlows', JSON.stringify(res.flows));\r\n            dispatch({ type: actionTypes.GOT_MY_FLOWS, myFlows: res.flows })\r\n        })\r\n    };\r\n};\r\n\r\nexport const getFlow = (flowId) => {\r\n    return dispatch => {\r\n        fetch('/api/flows/' + flowId)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            dispatch({ type: actionTypes.GOT_SINGLE_FLOW, flow: res.flow })\r\n        })\r\n    };\r\n};\r\n\r\nexport const getTempFlow = () => {\r\n  return dispatch => {\r\n      fetch('/api/flows/get')\r\n      .then(res => res.json())\r\n      .then(res => {\r\n          dispatch({ type: actionTypes.GOT_SINGLE_FLOW, flow: res.flow })\r\n      })\r\n  };\r\n};\r\n\r\nexport const submitTempNewFlow = (flowData) => {\r\n  return dispatch => {\r\n      return fetch('/api/flows/t-add', options(flowData))\r\n      .then(res => res.json())\r\n  }\r\n};\r\n\r\nexport const submitNewFlow = (flowData) => {\r\n    return dispatch => {\r\n        return fetch('/api/flows/add', options(flowData))\r\n        .then(res => res.json())\r\n    }\r\n};\r\n\r\nexport const saveFlow = (flowId, flowData) => {\r\n    return dispatch => {\r\n        return fetch('/api/flows/edit/' + flowId, options(flowData))\r\n        .then(res => res.json())\r\n    }\r\n}\r\n\r\nexport const deleteFlow = (flowId) => {\r\n    return dispatch => {\r\n        return fetch('/api/flows/delete/' + flowId, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwtToken'),\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'delete'\r\n        })\r\n        .then(res => res.json())\r\n    };\r\n}\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './WrappedLink.css'\n\nconst wrappedLink = (props) => {\n    return (\n        <Link to={props.to} className=\"WrappedLink\">\n            <button\n                className={[...props.buttonClasses, \"WrappedButton\"].join(' ')}\n                onClick={props.onClick}>\n                {props.children}</button>\n        </Link>\n    );\n}\n\nexport default wrappedLink;\n","import React, { Component, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getTempFlow, submitTempNewFlow } from '../../store/actions/flowsActions';\nimport Article from '../../components/Article/Article';\nimport WrappedLink from '../../components/WrappedLink/WrappedLink';\nimport './Home.css';\nimport ReactFlow from 'react-flow-renderer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faFolderOpen, faSave, faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst elements = [\n  {\n    id: '1',\n    type: 'input', // input node\n    data: { label: 'Input Node' },\n    position: { x: 250, y: 25 },\n  },\n  // default node\n  {\n    id: '2',\n    // you can also pass a React component as a label\n    data: { label: <div>Default Node</div> },\n    position: { x: 100, y: 125 },\n  },\n  {\n    id: '3',\n    data: { label: 'Python Script' },\n    position: { x: 250, y: 250 },\n  },\n  {\n    id: '4',\n    type: 'output', // output node\n    data: { label: 'Output Node' },\n    position: { x: 150, y: 350 },\n  },\n  // animated edge\n  { id: 'e1-2', source: '1', target: '2', animated: true },\n  { id: 'e2-3', source: '2', target: '3' },\n  { id: 'e3-4', source: '3', target: '4' },\n];\n\nconst Home = (props) => {\n    const [flow, setFlow] = useState(elements)\n\n    useEffect(() => {\n        props.getTempFlow()\n    }, [])\n\n    useEffect(() => {\n        if (props.flow && props.flow.data) {\n            console.log(props.flow.data)\n\n            props.flow.data.map(item => {\n                if (item.data && typeof item.data.label !== \"string\") {\n                    item.data.label = React.createElement(item.data.label.type, item.data.label.props, item.data.label.props.children)\n                }\n            })\n\n            setFlow(props.flow.data)\n        } else {\n            setFlow(elements)\n        }\n    }, [props.flow])\n\n    const saveFlow = () => {\n        console.log(flow)\n        props.submitTempNewFlow({data: flow})\n    }\n\n    return (\n        <div className=\"flow-page\">\n            <div className=\"page-layout\">\n                <div className=\"header\">\n                    <div style={{height: '30px'}}>\n\n                    </div>\n                    <div className=\"px-3\">\n                        <FontAwesomeIcon icon={faPlus} className=\"text-white mx-2 cursor-pointer\"/>\n                        <FontAwesomeIcon icon={faFolderOpen} className=\"text-white mx-2 cursor-pointer\"/>\n                        <FontAwesomeIcon icon={faSave} className=\"text-white mx-2 cursor-pointer\" onClick={saveFlow}/>\n                        <FontAwesomeIcon icon={faCloudUploadAlt} className=\"text-white mx-2 cursor-pointer\"/>\n                    </div>\n                </div>\n                <div className=\"content-wrapper\">\n                    <div className=\"left-side-panel\">\n                        <div className=\"d-flex bg-header text-white text-uppercase text-sm\">\n                            <p className=\"flex-1 text-center mb-0 py-2 cs-border-bottom\">Activities</p>\n                            <p className=\"flex-1 text-center mb-0 py-2 cs-border-bottom\">Elements</p>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        <div className=\"flow-content\">\n                            <ReactFlow elements={flow} />\n                        </div>\n                        <div className=\"console-panel rounded-t overflow-hidden\">\n                            <div className=\"bg-header text-white rounded-t px-3 py-1\">\n                                Console\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"right-side-panel\">\n                        <div className=\"d-flex bg-header text-white text-uppercase text-sm\">\n                            <p className=\"flex-1 text-center mb-0 py-2 cs-border-bottom\">Properties</p>\n                            <p className=\"flex-1 text-center mb-0 py-2 cs-border-bottom\">Variables</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        flow: state.flows.flow,\n        myArticles: state.articles.myArticles,\n        isAuthenticated: state.users.isAuthenticated\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        submitTempNewFlow: (flowData) => dispatch(submitTempNewFlow(flowData)),\n        getTempFlow: () => dispatch(getTempFlow())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","export const GOT_ALL_ARTICLES = 'GOT_ALL_ARTICLES';\nexport const GOT_MY_ARTICLES = 'GOT_MY_ARTICLES';\nexport const GOT_SINGLE_ARTICLE = 'GOT_SINGLE_ARTICLE';\n\nexport const GOT_ALL_FLOWS = 'GOT_ALL_FLOWS';\nexport const GOT_MY_FLOWS = 'GOT_MY_FLOWS';\nexport const GOT_SINGLE_FLOW = 'GOT_SINGLE_FLOW';\n\nexport const LOGIN_SUCCESSFUL = 'LOGIN_SUCCESSFUL';\nexport const LOGOUT_USER = 'LOGOUT_USER';","import * as actionTypes from './actionTypes'\nimport jwt from 'jsonwebtoken';\n\nconst options = data => {\n    return {\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        method: 'post',\n        body: JSON.stringify(data)\n    };\n};\n\nexport const checkUserUniqueness = ({ field, value }) => {\n    return dispatch => {\n        return fetch('/api/users/validate', options({ field, value }))\n    }\n}\n\nexport const userSignupRequest = (userSignupDetails) => {\n    return dispatch => {\n        return fetch('/api/users/signup', options(userSignupDetails))\n    }\n}\n\nexport const userLoginRequest = (userLoginDetails) => {\n    return dispatch => {\n        return fetch('/api/users/login', options(userLoginDetails))\n        .then(res => res.json())\n        .then(res => {\n            if (res.success) {\n                const token = res.token;\n                delete res.token;\n                localStorage.setItem('jwtToken', token);\n                dispatch({ type: actionTypes.LOGIN_SUCCESSFUL, authorizationToken: token, authenticatedUsername: jwt.decode(token).username });\n            }\n            return res;\n        })\n    }   \n}\n\nexport const userLogoutRequest = () => {\n    return dispatch => {\n        localStorage.removeItem('jwtToken');\n        localStorage.removeItem('BasicMERNStackAppMyArticles');\n        dispatch({ type: actionTypes.LOGOUT_USER });\n    }\n}","import React from 'react';\nimport './ErrorMsg.css';\n\nconst errorMsg = (props) => {\n    return (\n        <small className=\"ErrorMsg\">{props.msg}</small>\n    );\n};\n\nexport default errorMsg;\n","import React from 'react';\nimport ErrorMsg from '../ErrorMsg/ErrorMsg';\nimport './InputField.css'\n\nconst inputField = (props) => {\n    const OnErrorClass = ['form-control', 'InputError'].join(' ');\n    return (\n        <div className=\"form-group\">\n            <label>{props.label}</label>\n            <input type={props.type} name={props.name}\n                defaultValue={props.defaultValue} placeholder={props.placeholder || props.label}\n                className={props.errors[props.name] ? OnErrorClass : 'form-control'}\n                onChange={props.onChange} {...props} />\n            {props.errors[props.name] !== '' && <ErrorMsg msg={props.errors[props.name]} />}\n        </div>\n    );\n}\n\nexport default inputField;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { checkUserUniqueness, userSignupRequest } from '../../../store/actions/usersActions'\nimport InputField from '../../../components/InputField/InputField';\n\n// Check if E-mail is Valid or not\nconst validateEmail = (email) => {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\nconst FIELDS = [\n    {name: 'name', type: 'text', label: 'Name'},\n    {name: 'username', type: 'text', label: 'Username'},\n    {name: 'email', type: 'email', label: 'E-mail Address'},\n    {name: 'password', type: 'password', label: 'Password'},\n    {name: 'confirmPassword', type: 'password', label: 'Confirm Password'}\n];\n\nclass Signup extends Component {\n    state = {\n        userDetails: {},\n        errors: {}\n    };\n\n    componentWillMount() {\n        if (localStorage.getItem('SignupPage') !== null ) {\n            const { userDetails, errors } = JSON.parse(localStorage.getItem('SignupPage'));\n            this.setState(prevState => {\n                return {\n                    ...prevState,\n                    userDetails: {...userDetails},\n                    errors: {...errors}\n                };\n            });\n        }\n    }\n\n    commonValidation = (field, value) => {\n        let error = {};\n        if (value === '') {\n            error[field] = 'This field is required';\n        } else {\n            if (field === 'email' && !validateEmail(value)) {\n                error[field] = 'Not a valid Email';\n            } else if (field === 'password' && value.length < 4) {\n                error[field] = 'Password too short';\n                if (this.state.errors['confirmPassword'] !== '' && value === this.state.userDetails.confirmPassword) {\n                    error['confirmPassword'] = '';\n                }\n            } else if (field === 'confirmPassword' && value !== this.state.userDetails.password) {\n                error[field] = 'Passwords do not match';\n            } else {\n                error[field] = '';\n            }\n        }\n        return error;\n    }\n\n    userUniqueness = async ({ field, value }) => {\n        const uniquenessError = await this.props.checkUserUniqueness({ field, value })\n            .then(res => res.json())\n            .then(res => {\n                let result = {};\n                if (res.error) {\n                    result = res.error;\n                } else {\n                    result[field] = '';\n                }\n                return result;\n            });\n        return uniquenessError;\n    }\n\n    handleInputChange = async (e) => {\n        const field = e.target.name;\n        const value = e.target.value;\n        let errors = {...this.state.errors};\n\n        const commonValidationError = await this.commonValidation(field, value);\n        let uniquenessError = {};\n        if ((field === 'username' || field === 'email') && value !== '') {\n            uniquenessError = await this.userUniqueness({ field, value });\n            errors = { ...errors, [field]: commonValidationError[field] || uniquenessError[field] };\n        } else {\n            errors = { ...errors, ...commonValidationError };\n        }\n\n        this.setState((prevState) => {\n            return {\n                ...prevState,\n                userDetails: {\n                    ...prevState.userDetails,\n                    [field]: value\n                },\n                errors: {...errors}\n            };\n        }, () => localStorage.setItem('SignupPage', JSON.stringify(this.state)));\n    }\n\n    handleSignup = (e) => {\n        e.preventDefault();\n        let errors = {...this.state.errors};\n        const userDetailsValid = Object.keys(errors).filter(field => errors[field] !== \"\").length === 0 ? true : false;\n        if (!userDetailsValid){\n            return;\n        }\n        else {\n            this.props.userSignupRequest(this.state.userDetails)\n            .then(res => res.json())\n            .then(res => {\n                if (res.errors) {\n                    errors = {...errors, ...res.errors};\n                    this.setState(prevState => {\n                        return {\n                            ...prevState,\n                            userDetails: {...prevState.userDetails},\n                            errors: {...errors}\n                        };\n                    });\n                } else {\n                    localStorage.removeItem('SignupPage');\n                    this.props.history.push('/login');\n                }\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        localStorage.removeItem('SignupPage');\n    }\n\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Redirect to=\"/\" />;\n        }\n        const inputFields = FIELDS.map(field =>\n            <InputField key={field.name}\n                        type={field.type} name={field.name} label={field.label}\n                        defaultValue={this.state.userDetails[field.name]}\n                        errors={this.state.errors}\n                        onChange={this.handleInputChange} />\n        )\n        return (\n            <div className=\"container\">\n                <br />\n                <h3 className=\"text-center\">Join Our Community!</h3>\n                <div className=\"jumbotron\">\n                    <form onSubmit={this.handleSignup}>\n                        { inputFields }\n                        <button className=\"btn btn-primary\">Sign Up</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.users.isAuthenticated\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        checkUserUniqueness: (userInputDetails) => dispatch(checkUserUniqueness(userInputDetails)),\n        userSignupRequest: (userSignupDetails) => dispatch(userSignupRequest(userSignupDetails))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { userLoginRequest } from '../../../store/actions/usersActions';\nimport InputField from '../../../components/InputField/InputField';\n\nconst FIELDS = [\n    {name: 'username', type: 'text', label: 'Username'},\n    {name: 'password', type: 'password', label: 'Password'}\n];\n\nclass Login extends Component {\n    state = {\n        userCredentials: {},\n        errors: {}\n    }\n\n    handleValidation = (field, value) => {\n        let error = {};\n        if (value === '') {\n            error[field] = 'This field is required';\n        } else {\n            error[field] = '';\n        }\n        return error;\n    }\n\n    handleInputChange = (e) => {\n        const field = e.target.name;\n        const value = e.target.value;\n\n        const errors = { ...this.state.errors, ...this.handleValidation(field, value) }\n        if (errors.invalidCredentials) {\n            delete errors.invalidCredentials;\n        }\n\n        this.setState((prevState) => {\n            return {\n                ...prevState,\n                userCredentials: {\n                    ...prevState.userCredentials,\n                    [field]: value\n                },\n                errors: {...errors}\n            };\n        });\n    }\n\n    handleLogin = (e) => {\n        e.preventDefault();\n        let errors = {...this.state.errors};\n        const userCredentialsValid = Object.keys(errors).filter(field => errors[field] !== \"\").length === 0 ? true : false;\n        if ( !userCredentialsValid ) {\n            return;\n        } else {\n            this.props.userLoginRequest(this.state.userCredentials)\n            .then(res => {\n                if (res.errors) {\n                    this.setState(prevState => {\n                        return {\n                            ...prevState,\n                            userCredentials: {...prevState.userCredentials},\n                            errors: {...prevState.errors, ...res.errors}\n                        };\n                    });\n                } else {\n                    this.props.history.push('/');\n                }\n            })\n        }\n    }\n\n    render() {\n        if (this.props.isAuthenticated) {\n            return <Redirect to=\"/\" />;\n        }\n        const inputFields = FIELDS.map(field =>\n            <InputField key={field.name}\n                        type={field.type} name={field.name} label={field.label}\n                        errors={this.state.errors}\n                        onChange={this.handleInputChange} />\n        )\n        return (\n            <div className=\"container\">\n                <br />\n                <h3 className=\"text-center\">Login</h3>\n                <div className=\"jumbotron\">\n                    { this.state.errors.invalidCredentials && <p className=\"text-danger\">{this.state.errors.invalidCredentials}</p> }\n                    <form onSubmit={this.handleLogin}>\n                        { inputFields }\n                        <button className=\"btn btn-primary\">Login</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.users.isAuthenticated\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        userLoginRequest: (userLoginDetails) => dispatch(userLoginRequest(userLoginDetails))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import * as actionTypes from './actionTypes';\n\nconst options = (data) => {\n    return {\n        headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('jwtToken'),\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        method: 'post',\n        body: JSON.stringify(data)\n    };\n};\n\nexport const getAllArticles = () => {\n    return dispatch => {\n        fetch('/api/articles')\n        .then(res => res.json())\n        .then(res => {\n            localStorage.setItem('BasicMERNStackAppAllArticles', JSON.stringify(res.articles));\n            dispatch({ type: actionTypes.GOT_ALL_ARTICLES, articles: res.articles })\n        })\n    };\n};\n\nexport const getMyArticles = () => {\n    return dispatch => {\n        fetch('/api/articles/myarticles', {\n            headers: {\n                'Authorization': 'Bearer ' + localStorage.getItem('jwtToken'),\n                'Content-Type': 'application/json'\n            },\n            method: 'GET'\n        })\n        .then(res => res.json())\n        .then(res => {\n            localStorage.setItem('BasicMERNStackAppMyArticles', JSON.stringify(res.articles));\n            dispatch({ type: actionTypes.GOT_MY_ARTICLES, myArticles: res.articles })\n        })\n    };\n};\n\nexport const getArticle = (articleId) => {\n    return dispatch => {\n        fetch('/api/articles/' + articleId)\n        .then(res => res.json())\n        .then(res => {\n            dispatch({ type: actionTypes.GOT_SINGLE_ARTICLE, article: res.article })\n        })\n    };\n};\n\nexport const submitNewArticle = (articleData) => {\n    return dispatch => {\n        return fetch('/api/articles/add', options(articleData))\n        .then(res => res.json())\n    }\n};\n\nexport const saveArticle = (articleId, articleData) => {\n    return dispatch => {\n        return fetch('/api/articles/edit/' + articleId, options(articleData))\n        .then(res => res.json())\n    }\n}\n\nexport const deleteArticle = (articleId) => {\n    return dispatch => {\n        return fetch('/api/articles/delete/' + articleId, {\n            headers: {\n                'Authorization': 'Bearer ' + localStorage.getItem('jwtToken'),\n                'Content-Type': 'application/json'\n            },\n            method: 'delete'\n        })\n        .then(res => res.json())\n    };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getArticle, deleteArticle } from '../../../store/actions/articlesActions';\nimport WrappedLink from '../../../components/WrappedLink/WrappedLink';\nimport './FullArticle.css'\n\nclass FullArticle extends Component {\n    componentDidMount() {\n        this.getSingleArticle();\n    }\n\n    getSingleArticle() {\n        if (this.props.match.params.id) {\n            if (!this.props.article || (this.props.article._id !== + this.props.match.params.id)) {\n                this.props.getArticle(this.props.match.params.id);\n            }\n        }\n    }\n\n    handleEditArticleClick() {\n        this.props.history.replace({pathname: '/article/edit/' + this.props.match.params.id});\n    }\n\n    handleDeleteArticleClick() {\n        alert('We are deleting your article...');\n        this.props.deleteArticle(this.props.match.params.id)\n        .then(res => {\n            if (res.success) {\n                this.props.history.push('/');\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <br />\n                <div className=\"jumbotron FullArticle\">\n                    <h3 className=\"text-center\">{this.props.article.title}</h3>\n                    <h5 className=\"text-right\">- By {this.props.article.author}</h5>\n                    <p>{this.props.article.body}</p>\n                    {this.props.isAuthenticated && this.props.authenticatedUsername === this.props.article.author\n                    && <button\n                        className=\"btn btn-danger\"\n                        style={{float: 'right', padding: '6px 12px'}}\n                        onClick={() => this.handleDeleteArticleClick()}>Delete</button>}\n                    {this.props.isAuthenticated && this.props.authenticatedUsername === this.props.article.author\n                    && <WrappedLink\n                        to={\"/article/edit/\" + this.props.match.params.id}\n                        buttonClasses={['btn', 'btn-info', 'mr-2']}\n                        click={() => this.handleEditArticleClick()}>Edit</WrappedLink>}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        article: state.articles.article,\n        isAuthenticated: state.users.isAuthenticated,\n        authenticatedUsername: state.users.authenticatedUsername\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getArticle: (articleId) => dispatch(getArticle(articleId)),\n        deleteArticle: (articleId) => dispatch(deleteArticle(articleId))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FullArticle);\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { submitNewArticle } from '../../../store/actions/articlesActions';\nimport ErrorMsg from '../../../components/ErrorMsg/ErrorMsg';\nimport InputField from '../../../components/InputField/InputField';\n\nconst FIELDS = [\n    {name: 'title', type: 'text', label: 'Title'},\n    {name: 'author', type: 'text', label: 'Author', disabled: 'disabled'}\n];\n\nclass AddArticle extends Component {\n    state = {\n        article: {},\n        errors: {}\n    };\n\n    componentWillMount() {\n        if (localStorage.getItem('AddArticlePage') !== null ) {\n            const { article, errors } = JSON.parse(localStorage.getItem('AddArticlePage'));\n            this.setState(prevState => {\n                return {\n                    ...prevState,\n                    article: {...article},\n                    errors: {...errors}\n                };\n            });\n        }\n    }\n\n    handleValidation = (field, value) => {\n        let error = {};\n        if (value === '') {\n            error[field] = 'This field is required';\n        } else {\n            error[field] = '';\n        }\n        return error;\n    }\n\n    handleInputChange = (e) => {\n        const field = e.target.name;\n        const value = e.target.value;\n\n        const errors = { ...this.state.errors, ...this.handleValidation(field, value) }\n\n        this.setState((prevState) => {\n            return {\n                ...prevState,\n                article: {\n                    ...prevState.article,\n                    [field]: value\n                },\n                errors: {...errors}\n            };\n        }, () => localStorage.setItem('AddArticlePage', JSON.stringify(this.state)));\n    }\n\n    componentWillUnmount() {\n        localStorage.removeItem('AddArticlePage');\n    }\n\n    handleNewArticleSubmit = (e) => {\n        e.preventDefault();\n        let errors = {...this.state.errors};\n        const formValuesValid = Object.keys(errors).filter(field => errors[field] !== \"\").length === 0 ? true : false;\n        if ( !formValuesValid ) {\n            return;\n        } else {\n            this.props.submitNewArticle({...this.state.article, author: this.props.authenticatedUsername})\n            .then(res => {\n                if (res.errors) {\n                    this.setState(prevState => {\n                        return {\n                            ...prevState,\n                            article: {...prevState.article},\n                            errors: {...prevState.errors, ...res.errors}\n                        };\n                    });\n                } else {\n                    this.props.history.push('/');\n                }\n            })\n        }\n    }\n\n    render() {\n        if (!this.props.isAuthenticated) {\n            return <Redirect to=\"/login\" />;\n        }\n        return (\n            <div className=\"container\">\n                <br />\n                <h3 className=\"text-center\">Add Article</h3>\n                <div className=\"jumbotron\">\n                    <form onSubmit={this.handleNewArticleSubmit}>\n                        <InputField key={FIELDS[0].name}\n                            type={FIELDS[0].type} name={FIELDS[0].name} label={FIELDS[0].label}\n                            defaultValue={this.state.article.title}\n                            errors={this.state.errors}\n                            onChange={this.handleInputChange} />\n                        <InputField key={FIELDS[1].name}\n                            type={FIELDS[1].type} name={FIELDS[1].name} label={FIELDS[1].label}\n                            defaultValue={this.props.authenticatedUsername} disabled={FIELDS[1].disabled}\n                            errors={this.state.errors}\n                            onChange={this.handleInputChange} />\n                        <div className=\"form-group\">\n                            <label>Body</label>\n                            <textarea\n                                name=\"body\" style={{height: '200px'}}\n                                className=\"form-control\" placeholder=\"Your article's contents goes here... Good luck!\"\n                                onChange={this.handleInputChange}\n                                defaultValue={this.state.article.body} />\n                            {this.state.errors.body !== '' && <ErrorMsg msg={this.state.errors.body} />}\n                        </div>\n                        <button className=\"btn btn-success\">Submit</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.users.isAuthenticated,\n        authenticatedUsername: state.users.authenticatedUsername\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        submitNewArticle: (articleData) => dispatch(submitNewArticle(articleData))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddArticle);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { saveArticle } from '../../../store/actions/articlesActions';\nimport ErrorMsg from '../../../components/ErrorMsg/ErrorMsg';\nimport InputField from '../../../components/InputField/InputField';\n\nconst FIELDS = [\n    {name: 'title', type: 'text', label: 'Title'},\n    {name: 'author', type: 'text', label: 'Author', disabled: 'disabled'}\n];\n\nclass EditArticle extends Component {\n    state = {\n        article: {},\n        errors: {}\n    };\n\n    componentWillMount() {\n        const articleId = this.props.match.params.id;\n        let article, errors;\n        if (localStorage.getItem('Edit' + articleId) === null ) {\n            localStorage.setItem('Edit' + articleId, JSON.stringify({ article: this.props.article, errors: {} }));\n            article = this.props.article;\n            errors = {};\n        } else {\n            article = JSON.parse(localStorage.getItem('Edit' + articleId)).article;\n            errors = JSON.parse(localStorage.getItem('Edit' + articleId)).errors;\n        }\n\n        this.setState(prevState => {\n            return {\n                ...prevState,\n                article: {...article},\n                errors: {...errors}\n            };\n        });\n    }\n\n    handleValidation = (field, value) => {\n        let error = {};\n        if (value === '') {\n            error[field] = 'This field is required';\n        } else {\n            error[field] = '';\n        }\n        return error;\n    }\n\n    handleInputChange = (e) => {\n        const field = e.target.name;\n        const value = e.target.value;\n\n        const errors = { ...this.state.errors, ...this.handleValidation(field, value) }\n        this.setState((prevState) => {\n            return {\n                ...prevState,\n                article: {\n                    ...prevState.article,\n                    [field]: value\n                },\n                errors: {...errors}\n            };\n        }, () => localStorage.setItem('Edit' + this.state.article._id, JSON.stringify(this.state)));\n    }\n\n    handleEditArticleSubmit = (e) => {\n        e.preventDefault();\n        let errors = {...this.state.errors};\n        const formValuesValid = Object.keys(errors).filter(field => errors[field] !== \"\").length === 0 ? true : false;\n        if ( !formValuesValid ) {\n            return;\n        } else {\n            this.props.saveArticle(this.props.match.params.id, this.state.article)\n            .then(res => {\n                if (res.errors) {\n                    this.setState(prevState => {\n                        return {\n                            ...prevState,\n                            article: {...prevState.article},\n                            errors: {...prevState.errors, ...res.errors}\n                        };\n                    });\n                } else {\n                    localStorage.removeItem('Edit' + this.props.match.params.id);\n                    this.props.history.push('/articles/' + this.props.match.params.id);\n                }\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        localStorage.removeItem('Edit' + this.props.match.params.id);\n    }\n\n    render() {\n        const inputFields = FIELDS.map(field =>\n            <InputField key={field.name}\n                        type={field.type} name={field.name} label={field.label}\n                        defaultValue={this.state.article[field.name]} disabled={field.disabled}\n                        errors={this.state.errors}\n                        onChange={this.handleInputChange} />\n        );\n        return (\n            <div className=\"container\">\n                <br />\n                <h3 className=\"text-center\">Edit Article</h3>\n                <div className=\"jumbotron\">\n                    <form onSubmit={this.handleEditArticleSubmit}>\n                        {inputFields}\n                        <div className=\"form-group\">\n                            <label>Body</label>\n                            <textarea\n                                name=\"body\" style={{height: '200px'}}\n                                className=\"form-control\"\n                                onChange={this.handleInputChange}\n                                defaultValue={this.state.article.body} />\n                            {this.state.errors.body !== '' && <ErrorMsg msg={this.state.errors.body} />}\n                        </div>\n                        <button className=\"btn btn-success\">Save</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        article: state.articles.article\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveArticle: (articleId, articleData) => dispatch(saveArticle(articleId, articleData))\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditArticle));\n","import React, { Component } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { userLogoutRequest } from '../../store/actions/usersActions';\n\nclass NavigationBar extends Component {\n    render() {\n        const userLinks = (\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item mr-2 mt-2\">\n                    Hello, {this.props.authenticatedUsername}\n                </li>\n                <li className=\"nav-item\">\n                    <a className=\"btn btn-outline-primary\" onClick={this.props.userLogoutRequest}>Logout</a>\n                </li>\n            </ul>\n        );\n        const guestLinks = (\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item mr-2\">\n                    <NavLink to=\"/login\" className=\"btn btn-outline-primary\">Login</NavLink>\n                </li>\n                <li className=\"nav-item\">\n                    <NavLink to=\"/signup\" className=\"btn btn-primary\">Signup</NavLink>\n                </li>\n            </ul>\n        );\n    \n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <Link to='/'><h1 className=\"navbar-brand\">MERN App</h1></Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#myNavBar\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"myNavBar\">\n                    {this.props.isAuthenticated ? userLinks : guestLinks}\n                </div>\n            </nav>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.users.isAuthenticated,\n        authenticatedUsername: state.users.authenticatedUsername\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        userLogoutRequest: () => dispatch(userLogoutRequest())\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationBar);\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './containers/Home/Home';\nimport Signup from './containers/Users/Signup/Signup';\nimport Login from './containers/Users/Login/Login';\nimport FullArticle from './containers/Articles/FullArticle/FullArticle';\nimport AddArticle from './containers/Articles/AddArticle/AddArticle';\nimport EditArticle from './containers/Articles/EditArticle/EditArticle';\nimport NavigationBar from './containers/NavigationBar/NavigationBar';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"\">\n                {/* <NavigationBar /> */}\n                <Switch>\n                    {/* <Route exact path=\"/article/add\" component={AddArticle} />\n                    <Route path=\"/article/edit/:id\" component={EditArticle} />\n                    <Route path=\"/articles/:id\" component={FullArticle} />\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/signup\" component={Signup} /> */}\n                    <Route path=\"/\" component={Home} />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    articles: [],\n    article: {},\n    myArticles: {},\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.GOT_ALL_ARTICLES:\n            return {\n                ...state,\n                articles: action.articles\n            };\n        case actionTypes.GOT_MY_ARTICLES: {\n            return {\n                ...state,\n                myArticles: action.myArticles\n            }\n        }\n        case actionTypes.GOT_SINGLE_ARTICLE:\n            return {\n                ...state,\n                article: action.article\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes'\nimport jwt from 'jsonwebtoken';\n\nconst validCredentials = () => {\n    const authorizationToken = localStorage.getItem('jwtToken');\n    if (authorizationToken === null)\n        return false;\n    try {\n        jwt.decode(authorizationToken);\n        return true;\n    } catch(err) {\n        return false;\n    }\n}\n\nconst initialState = {\n    isAuthenticated: validCredentials(),\n    authenticatedUsername: validCredentials() === false ? '' : jwt.decode(localStorage.getItem('jwtToken')).username\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.LOGIN_SUCCESSFUL:\n            return {\n                isAuthenticated: true,\n                authenticatedUsername: action.authenticatedUsername,\n            }\n        case actionTypes.LOGOUT_USER: {\n            return {\n                isAuthenticated: false,\n                authenticatedUsername: ''\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    flows: [],\n    flow: {},\n    myFlows: {},\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.GOT_ALL_FLOWS:\n            return {\n                ...state,\n                flows: action.flows\n            };\n        case actionTypes.GOT_MY_FLOWS: {\n            return {\n                ...state,\n                myFlows: action.myFlows\n            }\n        }\n        case actionTypes.GOT_SINGLE_FLOW:\n            return {\n                ...state,\n                flow: action.flow\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport articlesReducer from './store/reducers/articlesReducer';\nimport usersReducer from './store/reducers/usersReducer';\nimport flowsReducer from './store/reducers/flowsReducer';\n\n// import registerServiceWorker from './registerServiceWorker';\n\nconst rootReducer = combineReducers({\n    articles: articlesReducer,\n    users: usersReducer,\n    flows: flowsReducer\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst app = (\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n);\n\n\nReactDOM.render(app, document.getElementById('root'));\n// registerServiceWorker();\n"],"sourceRoot":""}